{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0412\\u0430\\u0434\\u0438\\u043C\\\\Desktop\\\\SVCHVS-LR10_react\\\\src\\\\components\\\\cards\\\\Cards.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport styles from './Cards.module.css';\nimport React, { createRef, useEffect, useState } from 'react';\nimport ClickAwayListener from '@mui/base/ClickAwayListener';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet testfunc = () => {\n  localStorage.removeItem(\"items\");\n  const data = require('./items.json');\n  localStorage.setItem(\"items\", JSON.stringify(data));\n  console.log(data);\n};\ntestfunc();\nconst ADD_ITEM = 'ADD-ITEM';\nconst UPDATE_ITEM = 'UPDATE-ITEM';\nconst DELETE_ITEM = 'DELETE-ITEM';\nconst ItemForm = props => {\n  _s();\n  const items = JSON.parse(localStorage.getItem(\"items\"));\n  const addItemNameRef = /*#__PURE__*/React.createRef();\n  const addItemPriceRef = /*#__PURE__*/React.createRef();\n  const addItemImgRef = /*#__PURE__*/React.createRef();\n  const addItemCountRef = /*#__PURE__*/React.createRef();\n  const [disabled, setDisabled] = useState(true);\n  const [data, setData] = useState({\n    name: '',\n    isNameValid: false,\n    price: '',\n    isPriceValid: false,\n    img: '',\n    isImgValid: false,\n    count: '',\n    isCountValid: false\n  });\n  const [getId, setId] = useState(items.length);\n  let validateStringValue = value => {\n    return typeof value === \"string\" && value !== \"\";\n  };\n  let validateIntValue = value => {\n    value = parseInt(value);\n    console.log(Number.isInteger(value));\n    return Number.isInteger(value);\n  };\n  let validateUrl = value => {\n    const httpRegex = /^https?:\\/\\/(?:www\\.)?[-a-zA-Z\\d@:%._+~#=]{1,256}\\.[a-zA-Z\\d()]{1,6}\\b[-a-zA-Z\\d()@:%_+.~#?&\\/=]*$/;\n    console.log(httpRegex.test(value));\n    return httpRegex.test(value);\n  };\n  let checkButtonForValidate = () => {\n    if (data.isNameValid && data.isPriceValid && data.isCountValid && data.isImgValid) {\n      setDisabled(false);\n    } else {\n      setDisabled(true);\n    }\n  };\n  let addItem = () => {\n    setId(getId => getId + 1);\n    console.log(`id is ${getId}`);\n    items.push({\n      \"id\": getId,\n      \"name\": `${data.name}`,\n      \"price\": data.price,\n      \"img\": `${data.img}`,\n      \"count\": data.count\n    });\n    console.log(items);\n    localStorage.setItem(\"items\", JSON.stringify(items));\n    setData({\n      name: '',\n      isNameValid: false,\n      price: '',\n      isPriceValid: false,\n      img: '',\n      isImgValid: false,\n      count: '',\n      isCountValid: false\n    });\n  };\n  let updateItem = id => {\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].id === id) {\n        items[i] = {\n          \"id\": id,\n          \"name\": `${data.name}`,\n          \"price\": data.price,\n          \"img\": `${data.img}`,\n          \"count\": data.count\n        };\n        console.log(items);\n        localStorage.setItem(\"items\", JSON.stringify(items));\n        break;\n      }\n    }\n    setData({\n      name: '',\n      isNameValid: false,\n      price: '',\n      isPriceValid: false,\n      img: '',\n      isImgValid: false,\n      count: '',\n      isCountValid: false\n    });\n  };\n  if (!props.show) {\n    return null;\n  } else {\n    switch (props.action) {\n      case ADD_ITEM:\n        {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.item_form,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.form_wrapp,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.form_content,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n                  ref: addItemNameRef,\n                  onChange: () => {\n                    const value = addItemNameRef.current.value;\n                    if (validateStringValue(value)) {\n                      data.name = value;\n                      data.isNameValid = true;\n                    } else {\n                      data.isNameValid = false;\n                    }\n                    checkButtonForValidate();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"\\u0421\\u0442\\u043E\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C\",\n                  ref: addItemPriceRef,\n                  onChange: () => {\n                    const value = addItemPriceRef.current.value;\n                    if (validateIntValue(value)) {\n                      data.price = value;\n                      data.isPriceValid = true;\n                    } else {\n                      data.isPriceValid = false;\n                    }\n                    checkButtonForValidate();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u0444\\u043E\\u0442\\u043E\",\n                  ref: addItemImgRef,\n                  onChange: () => {\n                    const value = addItemImgRef.current.value;\n                    if (validateUrl(value)) {\n                      data.img = value;\n                      data.isImgValid = true;\n                    } else {\n                      data.isImgValid = false;\n                    }\n                    checkButtonForValidate();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"\\u0412 \\u043D\\u0430\\u043B\\u0438\\u0447\\u0438\\u0438\",\n                  ref: addItemCountRef,\n                  onChange: () => {\n                    const value = addItemCountRef.current.value;\n                    if (validateIntValue(value)) {\n                      data.count = value;\n                      data.isCountValid = true;\n                    } else {\n                      data.isCountValid = false;\n                    }\n                    checkButtonForValidate();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.form_buttons,\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  disabled: disabled,\n                  onClick: () => {\n                    addItem();\n                    setDisabled(true);\n                    props.onClose();\n                  },\n                  children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: props.onClose,\n                  children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 21\n          }, this);\n        }\n      case UPDATE_ITEM:\n        {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.item_form,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.form_wrapp,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.form_content,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n                  ref: addItemNameRef,\n                  onChange: () => {\n                    const value = addItemNameRef.current.value;\n                    if (validateStringValue(value)) {\n                      data.name = value;\n                      data.isNameValid = true;\n                    } else {\n                      data.isNameValid = false;\n                    }\n                    checkButtonForValidate();\n                  },\n                  onClick: () => {\n                    if (addItemNameRef.current.value === '') {\n                      addItemNameRef.current.value = items[props.id].name;\n                      if (validateStringValue(addItemNameRef.current.value)) {\n                        data.name = addItemNameRef.current.value;\n                        data.isNameValid = true;\n                      }\n                    }\n                    checkButtonForValidate();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"\\u0421\\u0442\\u043E\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C\",\n                  ref: addItemPriceRef,\n                  onChange: () => {\n                    const value = addItemPriceRef.current.value;\n                    if (validateIntValue(value)) {\n                      data.price = value;\n                      data.isPriceValid = true;\n                    } else {\n                      data.isPriceValid = false;\n                    }\n                    checkButtonForValidate();\n                  },\n                  onClick: () => {\n                    if (addItemPriceRef.current.value === '') {\n                      addItemPriceRef.current.value = items[props.id].price;\n                      if (validateIntValue(addItemPriceRef.current.value)) {\n                        data.price = addItemPriceRef.current.value;\n                        data.isPriceValid = true;\n                      }\n                    }\n                    checkButtonForValidate();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u0444\\u043E\\u0442\\u043E\",\n                  ref: addItemImgRef,\n                  onChange: () => {\n                    const value = addItemImgRef.current.value;\n                    if (validateUrl(value)) {\n                      data.img = value;\n                      data.isImgValid = true;\n                    } else {\n                      data.isImgValid = false;\n                    }\n                    checkButtonForValidate();\n                  },\n                  onClick: () => {\n                    if (addItemImgRef.current.value === '') {\n                      addItemImgRef.current.value = items[props.id].img;\n                      if (validateUrl(addItemImgRef.current.value)) {\n                        data.img = addItemImgRef.current.value;\n                        data.isImgValid = true;\n                      }\n                    }\n                    checkButtonForValidate();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"\\u0412 \\u043D\\u0430\\u043B\\u0438\\u0447\\u0438\\u0438\",\n                  ref: addItemCountRef,\n                  onChange: () => {\n                    const value = addItemCountRef.current.value;\n                    if (validateIntValue(value)) {\n                      data.count = value;\n                      data.isCountValid = true;\n                    } else {\n                      data.isCountValid = false;\n                    }\n                    checkButtonForValidate();\n                  },\n                  onClick: () => {\n                    if (addItemCountRef.current.value === '') {\n                      addItemCountRef.current.value = items[props.id].count;\n                      if (validateIntValue(addItemCountRef.current.value)) {\n                        data.count = addItemCountRef.current.value;\n                        data.isCountValid = true;\n                      }\n                    }\n                    checkButtonForValidate();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.form_buttons,\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  disabled: disabled,\n                  onClick: () => {\n                    updateItem(props.id);\n                    setDisabled(true);\n                    props.onClose();\n                  },\n                  children: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u044C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: props.onClose,\n                  children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 21\n          }, this);\n        }\n      case DELETE_ITEM:\n        {\n          let onClickFuncs = () => {\n            props.deleteItem();\n            props.onClose();\n          };\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.item_form,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.form_wrapp,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.form_content,\n                children: \"\\u0412\\u044B \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E \\u0445\\u043E\\u0442\\u0438\\u0442\\u0435 \\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0442\\u043E\\u0432\\u0430\\u0440?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.form_buttons,\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: onClickFuncs,\n                  children: \"\\u0414\\u0430\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: props.onClose,\n                  children: \"\\u041D\\u0435\\u0442\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 21\n          }, this);\n        }\n      default:\n        {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"oops\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 21\n          }, this);\n        }\n    }\n  }\n};\n_s(ItemForm, \"9KE0rzMZ6VMdXWwYBPI2diUUH5M=\");\n_c = ItemForm;\nconst CardArea = props => {\n  _s2();\n  const [show, setShow] = useState(false);\n  const [action, setAction] = useState();\n  const HIGHLIGHTVALUE = '0px 0px 8px 8px rgba(0, 126, 251, 0.1)';\n  const rectRef = /*#__PURE__*/createRef();\n  const [highlightItem, setHighlightItem] = useState({\n    id: 0,\n    boxShadow: 'none',\n    isActive: false\n  });\n  const rectStyle = {\n    boxShadow: `${highlightItem.boxShadow}`\n  };\n  const changeHighlightOnClick = valueId => {\n    if (highlightItem.boxShadow === 'none' && !highlightItem.isActive) {\n      setHighlightItem({\n        id: valueId,\n        boxShadow: HIGHLIGHTVALUE,\n        isActive: true\n      });\n    }\n    if (highlightItem.boxShadow !== 'none' && highlightItem.isActive) {\n      setHighlightItem({\n        id: valueId,\n        boxShadow: 'none',\n        isActive: false\n      });\n    }\n  };\n  let deleteItem = id => {\n    const state = JSON.parse(localStorage.getItem(\"items\"));\n    for (let i = 0; i < state.length; i++) {\n      if (state[i].id === id) {\n        state.splice(i, 1);\n        break;\n      }\n    }\n    console.log(state);\n    localStorage.setItem(\"items\", JSON.stringify(state));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.content,\n    children: [/*#__PURE__*/_jsxDEV(ClickAwayListener, {\n      onClickAway: () => {\n        setHighlightItem({\n          id: props.id,\n          boxShadow: 'none',\n          isActive: false\n        });\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: rectRef,\n        style: rectStyle,\n        className: styles.rect,\n        onClick: () => {\n          changeHighlightOnClick(props.id);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.grid_wrapp,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.img,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${props.img}`,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.text_content,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.title,\n              children: [\"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435: \", props.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.price,\n              children: [\"\\u0421\\u0442\\u043E\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C: \", props.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.count,\n              children: [\"\\u0412 \\u043D\\u0430\\u043B\\u0438\\u0447\\u0438\\u0438: \", props.count]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.item_buttons,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.item_butt_edit,\n              onClick: () => {\n                setShow(true);\n                setAction(UPDATE_ITEM);\n              },\n              children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.item_butt_delete,\n              onClick: () => {\n                setShow(true);\n                setAction(DELETE_ITEM);\n              },\n              children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ItemForm, {\n      action: action,\n      show: show,\n      id: props.id,\n      deleteItem: () => {\n        deleteItem(props.id);\n      },\n      onClose: () => {\n        setShow(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 422,\n    columnNumber: 9\n  }, this);\n};\n_s2(CardArea, \"uO/MqltXXqFb0tCJ0cmG3EuMxNs=\");\n_c2 = CardArea;\nconst Cards = () => {\n  _s3();\n  const state = JSON.parse(localStorage.getItem(\"items\"));\n  const [show, setShow] = useState(false);\n  const [action, setAction] = useState();\n  let [itemsData, setItemsData] = useState([]);\n  useEffect(() => {\n    setTimeout(() => {\n      setItemsData(JSON.parse(localStorage.getItem(\"items\")).map(item => /*#__PURE__*/_jsxDEV(CardArea, {\n        id: item.id,\n        img: item.img,\n        name: item.name,\n        price: item.price,\n        count: item.count\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 17\n      }, this)));\n    }, 1);\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.wrapper,\n    children: [itemsData, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.button,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setShow(true);\n          setAction(ADD_ITEM);\n        },\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ItemForm, {\n      action: action,\n      show: show,\n      onClose: () => {\n        setShow(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 507,\n    columnNumber: 9\n  }, this);\n};\n_s3(Cards, \"PPF+LBfQQnaUOEgSZo/QyTnVvVg=\");\n_c3 = Cards;\nexport default Cards;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ItemForm\");\n$RefreshReg$(_c2, \"CardArea\");\n$RefreshReg$(_c3, \"Cards\");","map":{"version":3,"names":["styles","React","createRef","useEffect","useState","ClickAwayListener","testfunc","localStorage","removeItem","data","require","setItem","JSON","stringify","console","log","ADD_ITEM","UPDATE_ITEM","DELETE_ITEM","ItemForm","props","items","parse","getItem","addItemNameRef","addItemPriceRef","addItemImgRef","addItemCountRef","disabled","setDisabled","setData","name","isNameValid","price","isPriceValid","img","isImgValid","count","isCountValid","getId","setId","length","validateStringValue","value","validateIntValue","parseInt","Number","isInteger","validateUrl","httpRegex","test","checkButtonForValidate","addItem","push","updateItem","id","i","show","action","item_form","form_wrapp","form_content","current","form_buttons","onClose","onClickFuncs","deleteItem","CardArea","setShow","setAction","HIGHLIGHTVALUE","rectRef","highlightItem","setHighlightItem","boxShadow","isActive","rectStyle","changeHighlightOnClick","valueId","state","splice","content","rect","grid_wrapp","text_content","title","item_buttons","item_butt_edit","item_butt_delete","Cards","itemsData","setItemsData","setTimeout","map","item","wrapper","button"],"sources":["C:/Users/Вадим/Desktop/SVCHVS-LR10_react/src/components/cards/Cards.js"],"sourcesContent":["import styles from './Cards.module.css'\nimport React, { createRef, useEffect, useState } from 'react'\nimport ClickAwayListener from '@mui/base/ClickAwayListener';\n\nlet testfunc = () => {\n    localStorage.removeItem(\"items\")\n    const data = require('./items.json')\n    localStorage.setItem(\"items\", JSON.stringify(data))\n    console.log(data)\n}\n\ntestfunc()\n\nconst ADD_ITEM = 'ADD-ITEM'\nconst UPDATE_ITEM = 'UPDATE-ITEM'\nconst DELETE_ITEM = 'DELETE-ITEM'\n\nconst ItemForm = (props) => {\n\n    const items = JSON.parse(localStorage.getItem(\"items\"));\n    const addItemNameRef = React.createRef();\n    const addItemPriceRef = React.createRef();\n    const addItemImgRef = React.createRef();\n    const addItemCountRef = React.createRef();\n\n    const [disabled, setDisabled] = useState(true)\n\n    const [data, setData] = useState({\n        name: '',\n        isNameValid: false,\n        price: '',\n        isPriceValid: false,\n        img: '',\n        isImgValid: false,\n        count: '',\n        isCountValid: false\n    })\n    const [getId, setId] = useState(items.length)\n\n    let validateStringValue = (value) => {\n        return typeof value === \"string\" && value !== \"\";\n    }\n\n    let validateIntValue = (value) => {\n        value = parseInt(value)\n        console.log(Number.isInteger(value))\n        return Number.isInteger(value);\n    }\n\n    let validateUrl = (value) => {\n        const httpRegex = /^https?:\\/\\/(?:www\\.)?[-a-zA-Z\\d@:%._+~#=]{1,256}\\.[a-zA-Z\\d()]{1,6}\\b[-a-zA-Z\\d()@:%_+.~#?&\\/=]*$/;\n        console.log(httpRegex.test(value))\n        return httpRegex.test(value);\n    }\n    let checkButtonForValidate = () => {\n        if (data.isNameValid && data.isPriceValid\n            && data.isCountValid && data.isImgValid) {\n            setDisabled(false)\n        }\n        else {\n            setDisabled(true)\n        }\n    }\n\n    let addItem = () => {\n        setId(getId => getId + 1)\n        console.log(`id is ${getId}`)\n        items.push({\n            \"id\": getId,\n            \"name\": `${data.name}`,\n            \"price\": data.price,\n            \"img\": `${data.img}`,\n            \"count\": data.count\n        })\n        console.log(items)\n        localStorage.setItem(\"items\", JSON.stringify(items))\n        setData({\n            name: '',\n            isNameValid: false,\n            price: '',\n            isPriceValid: false,\n            img: '',\n            isImgValid: false,\n            count: '',\n            isCountValid: false\n        })\n    }\n\n    let updateItem = (id) => {\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].id === id) {\n                items[i] = {\n                    \"id\": id,\n                    \"name\": `${data.name}`,\n                    \"price\": data.price,\n                    \"img\": `${data.img}`,\n                    \"count\": data.count\n                }\n                console.log(items)\n                localStorage.setItem(\"items\", JSON.stringify(items))\n                break;\n            }\n        }\n        setData({\n            name: '',\n            isNameValid: false,\n            price: '',\n            isPriceValid: false,\n            img: '',\n            isImgValid: false,\n            count: '',\n            isCountValid: false\n        })\n    }\n\n\n    if (!props.show) {\n        return null;\n    }\n    else {\n        switch (props.action) {\n            case ADD_ITEM: {\n                return (\n                    <div className={styles.item_form}>\n                        <div className={styles.form_wrapp}>\n                            <div className={styles.form_content}>\n                                <input type=\"text\"\n                                    placeholder='Название'\n                                    ref={addItemNameRef}\n                                    onChange={() => {\n                                        const value = addItemNameRef.current.value;\n                                        if (validateStringValue(value)) {\n                                            data.name = value\n                                            data.isNameValid = true\n                                        }\n                                        else {\n                                            data.isNameValid = false\n                                        }\n                                        checkButtonForValidate()\n                                    }}\n                                />\n\n                                <input type=\"text\"\n                                    placeholder='Стоимость'\n                                    ref={addItemPriceRef}\n                                    onChange={() => {\n                                        const value = addItemPriceRef.current.value;\n                                        if (validateIntValue(value)) {\n                                            data.price = value\n                                            data.isPriceValid = true\n                                        }\n                                        else {\n                                            data.isPriceValid = false\n                                        }\n                                        checkButtonForValidate()\n                                    }}\n                                />\n\n                                <input type=\"text\"\n                                    placeholder='Ссылка на фото'\n                                    ref={addItemImgRef}\n                                    onChange={() => {\n                                        const value = addItemImgRef.current.value;\n                                        if (validateUrl(value)) {\n                                            data.img = value\n                                            data.isImgValid = true\n                                        }\n                                        else {\n                                            data.isImgValid = false\n                                        }\n                                        checkButtonForValidate()\n                                    }}\n                                />\n\n                                <input type=\"text\"\n                                    placeholder='В наличии'\n                                    ref={addItemCountRef}\n                                    onChange={() => {\n                                        const value = addItemCountRef.current.value;\n                                        if (validateIntValue(value)) {\n                                            data.count = value\n                                            data.isCountValid = true\n                                        }\n                                        else {\n                                            data.isCountValid = false\n                                        }\n                                        checkButtonForValidate()\n                                    }}\n                                />\n                            </div>\n                            <div className={styles.form_buttons}>\n                                <button\n                                    disabled={disabled}\n                                    onClick={() => {\n                                        addItem()\n                                        setDisabled(true)\n                                        props.onClose()\n                                    }}\n                                >\n                                    Добавить\n                                </button>\n                                <button onClick={props.onClose}>Отмена</button>\n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n\n            case UPDATE_ITEM: {\n                return (\n                    <div className={styles.item_form}>\n                        <div className={styles.form_wrapp}>\n                            <div className={styles.form_content}>\n                                <input type=\"text\"\n                                    placeholder='Название'\n                                    ref={addItemNameRef}\n                                    onChange={() => {\n                                        const value = addItemNameRef.current.value;\n                                        if (validateStringValue(value)) {\n                                            data.name = value\n                                            data.isNameValid = true\n                                        }\n                                        else {\n                                            data.isNameValid = false\n                                        }\n                                        checkButtonForValidate()\n                                    }}\n                                    onClick={() => {\n                                        if (addItemNameRef.current.value === '') {\n                                            addItemNameRef.current.value = items[props.id].name\n                                            if (validateStringValue(addItemNameRef.current.value)) {\n                                                data.name = addItemNameRef.current.value\n                                                data.isNameValid = true\n                                            }\n                                        }\n                                        checkButtonForValidate()\n                                    }}\n                                />\n\n                                <input type=\"text\"\n                                    placeholder='Стоимость'\n                                    ref={addItemPriceRef}\n                                    onChange={() => {\n                                        const value = addItemPriceRef.current.value;\n                                        if (validateIntValue(value)) {\n                                            data.price = value\n                                            data.isPriceValid = true\n                                        }\n                                        else {\n                                            data.isPriceValid = false\n                                        }\n                                        checkButtonForValidate()\n                                    }}\n                                    onClick={() => {\n                                        if (addItemPriceRef.current.value === '') {\n                                            addItemPriceRef.current.value = items[props.id].price\n                                            if (validateIntValue(addItemPriceRef.current.value)) {\n                                                data.price = addItemPriceRef.current.value\n                                                data.isPriceValid = true\n                                            }\n                                        }\n                                        checkButtonForValidate()\n                                    }}\n                                />\n\n                                <input type=\"text\"\n                                    placeholder='Ссылка на фото'\n                                    ref={addItemImgRef}\n                                    onChange={() => {\n                                        const value = addItemImgRef.current.value;\n                                        if (validateUrl(value)) {\n                                            data.img = value\n                                            data.isImgValid = true\n                                        }\n                                        else {\n                                            data.isImgValid = false\n                                        }\n                                        checkButtonForValidate()\n                                    }}\n                                    onClick={() => {\n                                        if (addItemImgRef.current.value === '') {\n                                            addItemImgRef.current.value = items[props.id].img\n                                            if (validateUrl(addItemImgRef.current.value)) {\n                                                data.img = addItemImgRef.current.value\n                                                data.isImgValid = true\n                                            }\n                                        }\n                                        checkButtonForValidate()\n                                    }}\n                                />\n\n                                <input type=\"text\"\n                                    placeholder='В наличии'\n                                    ref={addItemCountRef}\n                                    onChange={() => {\n                                        const value = addItemCountRef.current.value;\n                                        if (validateIntValue(value)) {\n                                            data.count = value\n                                            data.isCountValid = true\n                                        }\n                                        else {\n                                            data.isCountValid = false\n                                        }\n                                        checkButtonForValidate()\n                                    }}\n                                    onClick={() => {\n                                        if (addItemCountRef.current.value === '') {\n                                            addItemCountRef.current.value = items[props.id].count\n                                            if (validateIntValue(addItemCountRef.current.value)) {\n                                                data.count = addItemCountRef.current.value\n                                                data.isCountValid = true\n                                            }\n                                        }\n                                        checkButtonForValidate()\n                                    }}\n                                />\n                            </div>\n                            <div className={styles.form_buttons}>\n                                <button\n                                    disabled={disabled}\n                                    onClick={() => {\n                                        updateItem(props.id)\n                                        setDisabled(true)\n                                        props.onClose()\n                                    }}\n                                >\n                                    Подтвердить\n                                </button>\n                                <button onClick={props.onClose}>\n                                    Отмена\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n\n            case DELETE_ITEM: {\n\n                let onClickFuncs = () => {\n                    props.deleteItem()\n                    props.onClose()\n                }\n                return (\n                    <div className={styles.item_form}>\n                        <div className={styles.form_wrapp}>\n                            <div className={styles.form_content}>\n                                Вы действительно хотите удалить товар?\n                            </div>\n                            <div className={styles.form_buttons}>\n                                <button\n                                    onClick={onClickFuncs}\n                                >\n                                    Да\n                                </button>\n                                <button onClick={props.onClose}>\n                                    Нет\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n\n            default: {\n                return (\n                    <div>\n                        oops\n                    </div>\n                )\n            }\n        }\n    }\n}\n\nconst CardArea = (props) => {\n    const [show, setShow] = useState(false)\n\n    const [action, setAction] = useState()\n\n    const HIGHLIGHTVALUE = '0px 0px 8px 8px rgba(0, 126, 251, 0.1)'\n    const rectRef = createRef()\n\n    const [highlightItem, setHighlightItem] = useState({\n        id: 0,\n        boxShadow: 'none',\n        isActive: false\n    })\n    const rectStyle = { boxShadow: `${highlightItem.boxShadow}` }\n\n    const changeHighlightOnClick = (valueId) => {\n\n        if (highlightItem.boxShadow === 'none' && !highlightItem.isActive) {\n            setHighlightItem({\n                id: valueId,\n                boxShadow: HIGHLIGHTVALUE,\n                isActive: true\n            })\n        }\n        if (highlightItem.boxShadow !== 'none' && highlightItem.isActive) {\n            setHighlightItem({\n                id: valueId,\n                boxShadow: 'none',\n                isActive: false\n            })\n        }\n    }\n\n    let deleteItem = (id) => {\n        const state = JSON.parse(localStorage.getItem(\"items\"));\n        for (let i = 0; i < state.length; i++) {\n            if (state[i].id === id) {\n                state.splice(i, 1)\n                break;\n            }\n        }\n        console.log(state)\n        localStorage.setItem(\"items\", JSON.stringify(state))\n    }\n\n    return (\n        <div className={styles.content}>\n            <ClickAwayListener onClickAway={() => {\n                setHighlightItem({\n                    id: props.id,\n                    boxShadow: 'none',\n                    isActive: false\n                })\n            }}>\n                <div\n                    ref={rectRef}\n                    style={rectStyle}\n                    className={styles.rect}\n                    onClick={() => {\n                        changeHighlightOnClick(props.id)\n                    }}\n                >\n                    <div className={styles.grid_wrapp}>\n                        <div className={styles.img}>\n                            <img src={`${props.img}`} alt=\"\" />\n                        </div>\n                        <div className={styles.text_content}>\n                            <div className={styles.title}>\n                                Название: {props.name}\n                            </div>\n                            <div className={styles.price}>\n                                Стоимость: {props.price}\n                            </div>\n                            <div className={styles.count}>\n                                В наличии: {props.count}\n                            </div>\n                        </div>\n                        <div className={styles.item_buttons}>\n                            <button className={styles.item_butt_edit}\n                                onClick={() => {\n                                    setShow(true)\n                                    setAction(UPDATE_ITEM)\n                                }}\n                            >\n                                Изменить\n                            </button>\n                            <button className={styles.item_butt_delete}\n                                onClick={() => {\n                                    setShow(true)\n                                    setAction(DELETE_ITEM)\n                                }}\n                            >\n                                Удалить\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </ClickAwayListener>\n            <ItemForm\n                action={action}\n                show={show}\n                id={props.id}\n                deleteItem={() => { deleteItem(props.id) }}\n                onClose={() => { setShow(false) }}\n            />\n        </div>\n    )\n}\n\nconst Cards = () => {\n    const state = JSON.parse(localStorage.getItem(\"items\"));\n    const [show, setShow] = useState(false)\n    const [action, setAction] = useState()\n\n    let [itemsData, setItemsData] = useState([])\n    useEffect(() => {\n        setTimeout(() => {\n            setItemsData(JSON.parse(localStorage.getItem(\"items\")).map((item) =>\n                <CardArea\n                    key={item.id}\n                    id={item.id}\n                    img={item.img}\n                    name={item.name}\n                    price={item.price}\n                    count={item.count}\n                />\n            ))\n        }, 1)\n    }, [state])\n\n    return (\n        <div className={styles.wrapper}>\n            {itemsData}\n            <div className={styles.button}>\n                <button\n                    onClick={() => {\n                        setShow(true)\n                        setAction(ADD_ITEM)\n\n                    }}\n                >\n                    Добавить\n                </button>\n            </div>\n            <ItemForm\n                action={action}\n                show={show}\n                onClose={() => { setShow(false) }}\n            />\n        </div>\n    )\n}\n\nexport default Cards"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}